pipeline {
  agent {
    docker {
      image 'rajdeep4586/maven-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    SONAR_URL = "http://<your-sonarqube-ip>:9000" // Replace this with your SonarQube server IP
    DOCKER_IMAGE = "rajdeep4586/spring-boot-app:${BUILD_NUMBER}"
    GIT_REPO_NAME = "spring-boot-app"
    GIT_USER_NAME = "Rajdeep4586"
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'master', url: 'https://github.com/Rajdeep4586/spring-boot-app.git'
      }
    }

    stage('Build and Test') {
      steps {
        sh 'cd spring-boot-app && mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd spring-boot-app
            mvn sonar:sonar \
              -Dsonar.login=$SONAR_AUTH_TOKEN \
              -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', passwordVariable: 'DOCKER_PASS', usernameVariable: 'DOCKER_USER')]) {
          sh '''
            cd spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker push ${DOCKER_IMAGE}
          '''
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "rajdeep701@gmail.com"
            git config user.name "Rajdeep Keshri"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app/deployment.yml
            git add spring-boot-app/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:master
          '''
        }
      }
    }
  }
}
